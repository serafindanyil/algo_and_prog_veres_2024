"""
Реалізуйте структуру даних "черга з пріоритетами" на основі бінарної купи binary heap, в якому кожен батьківський елемент має вищий пріоритет, ніж пріоритети його дітей.

Якщо у двох елементів однаковий пріоритет, то батьківський елемент може мати пріоритет, ідентичний пріоритету одного або обох його дітей.

Операції, які підтримує ваша черга:

Вставка елемента з заданим значенням та пріоритетом до черги.
Видалення та повернення елемента з найвищим пріоритетом з черги.
Перегляд черги без її зміни.
Для реалізації такої черги з пріоритетами слід використати окремий клас Node, де кожен елемент буде мати два поля: значення та пріоритет.
При вставці елемента до черги, його потрібно розмістити у відповідному порядку з урахуванням пріоритету.
При видаленні елемента з найвищим пріоритетом, на його місце слід розмістити елемент з наступним найвищим пріоритетом.
"""


class Node:
    def __init__(self, value, priority):
        self.value = value
        self.priority = priority

    



